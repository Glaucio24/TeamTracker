@model IEnumerable<TeamTracker.Models.Employee>;
@using TeamTracker.Services.Interfaces;
@inject IImageService ImageService;

@{
    ViewData["Title"] = "Employees Index";
}

<h1>Employees</h1>

<div class="row mb-3">
    <div class="col-12 text-end">
        <a class="btn btn-primary rounded-pill" asp-action="Create">Create New</a>
    </div>
</div>

<div class="row g-5 ">
    <div class="col-12 col-md-4 shadow-lg sideNav">
        <!-- Search Form -->
        <form asp-action="Index" asp-controller="Employees">
            <div class="input-group mb-3">                
                <input class="form-control" type="search" name="searchString" placeholder="Search Employee" id="employeeSearch" oninput="searchEmployees()" />               
                <input type="submit" class="btn btn-outline-primary" value="Search" />
            </div>
        </form>

        <!-- Employees Filter -->
        <form asp-action="Index" method="get">
            <div class="mt-3">
                <label class="form-label fw-bold">EMPLOYEES FILTER</label>
                <select name="EmployeesId" asp-items="ViewBag.EmployeesId" class="form-control" onchange="this.form.submit()">
                    <option value="0">All Employees</option>
                </select>
            </div>
        </form>
    </div>

    <div class="col-12 col-md-8 ">
        <div class="row row-cols-1 g-3 shadow-lg">
            @foreach (var employee in Model)
            {
                <div class="col">
                    <div class="card mb-3 rounded-pill navShadow ">
                        <div class="row g-0">
                            <div class="col-md-4 square-img-container">
                                <img src='@ImageService.ConvertByteArrayToFile(employee.ImageData!, employee.ImageType!)' class="square-img rounded-start">
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <p class="card-text">
                                        <strong>Name: </strong>@Html.DisplayFor(modelItem => employee.FullName)
                                    </p>
                                    <p class="card-text">
                                        <strong>Email:</strong> @Html.DisplayFor(modelItem => employee.Email)
                                    </p>
                                    <p class="card-text">
                                        <strong>Phone Number:</strong> @Html.DisplayFor(modelItem => employee.PhoneNumber)
                                    </p>
                                    <p class="card-text">
                                        <strong>Hired Date:</strong> @Html.DisplayFor(modelItem => employee.HireDate)
                                    </p>                                                          
                                     <p><strong>Departments:</strong>
                                        @foreach (var department in employee.Departments)
                                        {
                                            <span>@department.Name</span>
                                        }
                                    </p>
                                    <p>
                                        <strong>Locations:</strong>
                                        @foreach (var location in employee.Locations)
                                        {
                                            <span>@location.Name</span>
                                        }
                                    </p>
                                    <p class="card-text">
                                        <strong>Employment Status:</strong> @Html.DisplayFor(modelItem => employee.Status)
                                    </p>

                                    <div class="fs-2 mt-4">
                                        <a class="me-3 editIcons" asp-action="Edit" asp-route-id="@employee.Id"><i class="bi bi-pencil-fill"></i></a>
                                        <a class="me-3 editIcons" asp-controller="Email" asp-action="SendPersonalEmail" asp-route-toEmail="@employee.Email"><i class="bi bi-envelope-fill"></i></a>
                                        <a class="me-3 editIcons text-danger" asp-action="Delete" asp-route-id="@employee.Id"><i class="bi bi-trash-fill"></i></a>
                                 
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <!-- Pagination Links -->
        <div class="pagination">
            @if (ViewBag.TotalPages > 1)
            {
                for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <a href="@Url.Action("Index", new { page = i, searchString = ViewData["SearchString"], EmployeesId = ViewData["EmployeesId"] })"
                       class="@(ViewBag.CurrentPage == i ? "active" : "")">@i</a>
                }
            }
        </div>

    </div>
</div>
<script src="~/js/employeeSearch.js"></script>
<!--Scripts to handle dynamic search-->
@section Scripts {
   
    <script>
       function searchEmployees() {
        const input = document.getElementById('employeeSearch');
        const filter = input.value.toLowerCase();
        const table = document.getElementById("employeeTable");
        const rows = table.getElementsByTagName("tr");

        for (let i = 1; i < rows.length; i++) {
            const cells = rows[i].getElementsByTagName("td");
            const nameCell = cells[1]; // Assuming the name is in the second column

            if (nameCell) {
                const txtValue = nameCell.textContent || nameCell.innerText;
                rows[i].style.display = txtValue.toLowerCase().includes(filter) ? "" : "none";
            }
        }
        }
    </script>
}
